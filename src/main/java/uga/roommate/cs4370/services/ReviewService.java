package uga.roommate.cs4370.services;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.sql.DataSource;

import java.util.List;
import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import uga.roommate.cs4370.models.Review;
import uga.roommate.cs4370.models.User;

@Service
public class ReviewService {
    private final DataSource dataSource;

    @Autowired
    public ReviewService(DataSource dataSource) {
        this.dataSource = dataSource;
    }
    
    /**
     * Create a new review in the database
     */
    public void createReview() throws SQLException {
        System.out.println("To be implemented.");
        // paramters: userId, content, rating value, revieweeId, reviewerID, tags
        // created at should be set to current time
        // reviewId should be auto-generated
        //upvote and downvote should be set to 0

        // User user = null;
        // int review_id = -1;
        // final String insertSql = "Insert into reviews (reviewerId, revieweeId, content, ratingValue, createdAt) values (?, ?, ?, CURRENT_TIMESTAMP, ?)"; 

        // try (Connection conn = dataSource.getConnection()) {
        //     // Prepare statement for inserting the new post
        //     try (PreparedStatement pstmt = conn.prepareStatement(insertSql, PreparedStatement.RETURN_GENERATED_KEYS)) {
        //         pstmt.setString(1, reviewerId);
        //         pstmt.setString(2, revieweeId);
        //         pstmt.setString(3, content);
        //         pstmt.setString(4, ratingValue);
                

        //         int rowsAffected = pstmt.executeUpdate();
        //         if (rowsAffected == 0) {
        //             return null;
        //         }

        //         // To get the postID that was generated by the database
        //         try (ResultSet generatedKeys = pstmt.getGeneratedKeys()) {
        //             if (generatedKeys.next()) {
        //                 review_id = generatedKeys.getInt(1);
        //             }
        //         }
        //     }
        // return null;
    }

    private List<String> extractTags() {
        System.out.println("To be implemented.");
        return null;
    }

    /**
     * Retrieve all reviews from the database
     * @return reviews A list of all the reviews 
     */
    public List<Review> getAllReviews() {
        List<Review> reviews = new ArrayList<>();
        /*
        for this, we need to make sure we account for the loggedInUser to see if
        they have voted on a review 
        */
        System.out.println("To be implemented.");
        return null;
    }

}
